pipeline {
    agent any
    tools {
        jdk 'JDK17'
    }
    stages {
        stage('Verificar Repositório') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], 
                          useRemoteConfigs: [[url: 'https://github.com/talescostam/talesemissormicrosservico.git']]])
            }
        }
      
        stage('Instalar Dependências') {
            steps {
                script {
                    bat '''
                    echo Instalando dependências...
                    mvn -version
                    mvn clean install
                    '''
                }
            }
        }
        
        stage('Análise SonarQube') {
            steps {
                script {
                    withSonarQubeEnv('SonarQubeServer') {
                        bat '''
                        echo Executando análise SonarQube...
                        mvn sonar:sonar -Dsonar.projectKey=TalesEmissorMicroservico -Dsonar.projectName=TalesEmissorMicroservico
                        '''
                    }
                }
            }
        }
        
        stage('Construir Imagem Docker') {
            steps {
                script {
                    def appName = 'TalesEmissorMicroservico'
                    def imageTag = "${appName}:${env.BUILD_ID}"
                    bat '''
                    echo Construindo imagem Docker...
                    docker build -t ${imageTag} .
                    '''
                }
            }
        }

        stage('Fazer Deploy') {
            steps {
                script {
                    bat '''
                    echo Fazendo deploy...
                    docker-compose down || true
                    docker-compose up -d --build
                    '''
                }
            }
        }
    }
    post {
        success {
            echo 'Deploy realizado com sucesso!'
        }
        failure {
            echo 'Houve um erro durante o deploy.'
        }
    }
}
